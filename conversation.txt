-In the call: Shantaly, Alex, Deon (last ~30%)
-The 'Get' and 'Put' stuff are just guesses, go with them for now but they may change
-Everything In descending priority
----------------------------------------------------------------------------------------------------------------------------------------------------------
What they want to do: Register: -PUT 
What we get from them: firstname, lastname, email, password, yes/no-for-team-captain, yes-no-accessible 
What we return: status code
--
What they want to do: Login: -GET 
What we get from them: user, pass 
What we return: status code
--
What they want to do: View Account Info
What we get from them: username
What we return: name, email, TeamCaptain/Participant, Acc.Needs/Not

	Not entirely sure how sessions will be managed, Shan said they would do it.

--
What they want to do: change password:
What we get from them: old pass, new pass
return: status code
--
What they want to do: search routes by city - CAN/US, focus on CAN for now, then PROV, then CITY
What we get from them: CNTRY, PROV, CITY
What we return: matching routes + all attributes

	NEEDED ATTRIBUTES IN ROUTES: Route#, assigned, accessible, length(km), start point (uni), drop off point, end or route, food location		
	(Process explained by deon)-if take bus start at uni, drop off at drop off point, from there go to route start point, then follow route to end of route, then go to food pickup location.  
--
What they want to do: invite notifications (and maybe general notification)
(Concept 1 [real-time]: TC make invite with username, goes to db, sends that user a notification, team accept from there)
(Concept 2 [delayed]: TC make invite with username, goes to db, each page refresh checks DB for pending request, team accept from there)
--





Other things:

faq: stored on DB? -GET --Shan insisted that this is better than hardcoding or storing on the webserver
-give them an api key? -shantaly said ok
-only 1 session